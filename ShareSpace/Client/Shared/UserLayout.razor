@inherits LayoutComponentBase
@inject ISnackbar SnackBar
@inject IUserService UserService
@inject INotificationService NotificationService
@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider authstate
@attribute [Authorize(Roles = "user")]


<PageTitle>Home</PageTitle>

<MudThemeProvider IsDarkMode="true" Theme="MyCustomTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudDrawer Style="background: rgb(23, 24, 24);" @bind-Open="@open" Anchor="@anchor" Elevation="1"
        Variant="@DrawerVariant.Temporary">
        <MudNavMenu Class="mud-width-full">
            <MudStack Row="true" Class="px-2 py-2">
                <AuthorizeView>
                    <Authorized>
                        @if (extraUserInfo.ProfilePicUrl is null)
                        {
                            <MudAvatar Size="Size.Large" Color="Color.Tertiary">
                                @GetUserInfo(context.User.Claims.ToList()).Name![0]
                            </MudAvatar>
                        }
                        else
                        {
                            <MudAvatar Size="Size.Large" Color="Color.Tertiary">
                                <MudImage Src="@extraUserInfo.ProfilePicUrl" />
                            </MudAvatar>
                        }
                    </Authorized>
                </AuthorizeView>
                <MudStack Justify="Justify.Center" Spacing="0">
                    <AuthorizeView>
                        <Authorized>
                            <MudText Style="color: white;" Typo="Typo.body1">
                                @GetUserInfo(context.User.Claims.ToList()).Name</MudText>
                            <MudText Typo="Typo.body2">&#64;@GetUserInfo(context.User.Claims.ToList()).UserName
                            </MudText>
                        </Authorized>
                        <NotAuthorized>

                        </NotAuthorized>
                    </AuthorizeView>
                </MudStack>
            </MudStack>
            <MudDivider Class="my-2" />
            <MudNavGroup Style="color: white;" Title="Settings" Icon="@Icons.Material.Filled.Settings" Expanded="true">
                <MudNavLink Style="color: white;" Href="/settings" Icon="@Icons.Material.Filled.Person"
                    IconColor="Color.Success"> Profile
                </MudNavLink>
                <MudNavLink Style="color: white;" Href="/security" Icon="@Icons.Material.Filled.Security"
                    IconColor="Color.Info">
                    Security
                </MudNavLink>
            </MudNavGroup>
        </MudNavMenu>
        <MudSpacer />
        <MudButton Color="Color.Error" OnClick="Logout" Variant="Variant.Filled">Logout
        </MudButton>
    </MudDrawer>

    <main>
        <header style="background-color: rgb(23, 24, 24);">
            <div class="phone_header w-100">
                <AuthorizeView>
                    <Authorized>
                        <MudButton OnClick="@(() => OpenDrawer(Anchor.Start))">
                            <MudAvatar Color="Color.Primary" Square="true" Variant="Variant.Outlined">
                                @GetUserInfo(context.User.Claims.ToList()).Name![0]
                            </MudAvatar>
                        </MudButton>
                    </Authorized>
                </AuthorizeView>
                @* <h1 style="color: white;" class="mb-0">ShareSpace</h1> *@
                <MudAvatar Size="Size.Medium" Color="Color.Tertiary">
                    <MudImage Src="/Assets/logo.webp" />
                </MudAvatar>
                <MudIconButton Href="/search" Icon="@Icons.Material.Rounded.Search" Color="Color.Inherit" />
            </div>
            <div class="pcheader gridlayoutab w-100">
                <div class="header1">
                    <div class="navbar h-100 ml-2 d-flex justify-content-start"
                        style="background-color: rgb(23, 24, 24);">

                        <AuthorizeView>
                            <Authorized>

                                <MudButton Class="flex-md-row-reverse" OnClick="@(() => OpenDrawer(Anchor.Start))">
                                    <MudAvatar Color="Color.Primary" Square="true" Variant="Variant.Outlined">
                                        @GetUserInfo(context.User.Claims.ToList()).Name![0]
                                    </MudAvatar>
                                </MudButton>

                            </Authorized>
                        </AuthorizeView>
                    </div>
                </div>
                <div class="headerx d-flex justify-content-around align-items-center">
                    <MudIconButton Class="py-0" Href="/main" Icon="@Icons.Material.Rounded.Home"
                        Color="Color.Inherit" />
                    <MudBadge Overlap="true" Color="Color.Tertiary" Content="@MessageCount">
                        <MudIconButton Class="py-0 px-1" Href="/chat" Icon="@Icons.Material.Rounded.Chat"
                            Color="Color.Inherit" />
                    </MudBadge>
                    <MudIconButton Href="/create-post" Icon="@Icons.Material.Rounded.PostAdd" Color="Color.Inherit" />
                    <MudBadge Overlap="true" Color="Color.Tertiary" Content="@NotificationsCount">
                        <MudIconButton Class="py-0 px-0 ml-3" OnClick="NavigateToHistoryPage"
                            Icon="@Icons.Material.Rounded.Notifications" Color="Color.Inherit" />
                    </MudBadge>
                    <MudIconButton Icon="@Icons.Material.Filled.Search" Href="/search" Color="Color.Inherit"
                        Class="mr-2" />
                </div>
                <div class="header2 d-flex justify-content-center align-items-center">
                    <h4 style="color: white;">explore more</h4>
                </div>
            </div>
        </header>

        <article class="p-1">
            <ShareSpace.Client.Pages.UserPages.UserProfile Extras="extraUserInfo" />
        </article>
        <section>
            <MudMainContent Class="py-0" Style="background-color: rgb(23, 24, 24);">



                @* DA MAINNNNNNNNNNN *@

                @Body

                @* DA MAINNNNNNNNNNN *@



            </MudMainContent>
        </section>
        <nav>
            <ShareSpace.Client.Pages.UserPages.Suggestions />
        </nav>
        <footer>
            <MudAppBar Class="p-0" Style="background-color: rgb(23, 24, 24);" Elevation="0" Fixed="false" Dense="false">
                <AuthorizeView>
                    <Authorized>

                        <div class="d-flex justify-content-between w-100">
                            <MudIconButton Href="/main" Icon="@Icons.Material.Rounded.Home" Color="Color.Inherit" />
                            <MudIconButton Href="/chat" Icon="@Icons.Material.Rounded.Chat" Color="Color.Inherit" />
                            <MudIconButton Href="/create-post" Icon="@Icons.Material.Rounded.PostAdd"
                                Color="Color.Inherit" />
                            <MudIconButton Href="/history" Icon="@Icons.Material.Rounded.Notifications"
                                Color="Color.Inherit" />
                            <MudIconButton Href="/favorites" Icon="@Icons.Material.Rounded.Favorite"
                                Color="Color.Inherit" />
                        </div>

                    </Authorized>
                </AuthorizeView>
                <MudSpacer />
            </MudAppBar>
        </footer>
    </main>
</MudLayout>


@code {
    bool open;
    Anchor anchor;

    void OpenDrawer(Anchor anchor)
    {
        this.anchor = anchor;
        open = true;
    }

    async void NavigateToHistoryPage()
    {
        var notif_result = await NotificationService.GetNotificationsCount();
        if (notif_result.IsSuccess)
        {
            NotificationsCount = notif_result.Data;
        }
        NavigationManager.NavigateTo("/history");
        StateHasChanged();
    }
    MudTheme MyCustomTheme = new()
        {
            Palette = new PaletteLight
            {
                Primary = Colors.Blue.Default,
                Secondary = Colors.Green.Accent4,
                AppbarBackground = Colors.Red.Default,
            },
            PaletteDark = new PaletteDark
            {
                Primary = Colors.Yellow.Accent3,
                Secondary = Colors.Shades.White,
                Tertiary = Colors.Grey.Darken4,
            },
            LayoutProperties = new LayoutProperties
            {
                DrawerWidthLeft = "355px",
                DrawerWidthRight = "100%"
            },
        };
}