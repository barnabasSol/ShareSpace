@page "/main"
@layout UserLayout
@attribute [Authorize(Roles = "user")]
@inject IPostService PostService

<div class="w-100">
    @if (isLoading)
    {
        <PostLoading />
    }
    else if (!Posts.Any())
    {
        <MudAlert Class="my-2" Severity="Severity.Normal" Variant="Variant.Outlined">NO POSTS FOR NOW</MudAlert>
    }
    else
    {
        @foreach (var post in Posts)
        {
            <Post post="post" OnDelete="DeletePost" />
        }
    }
</div>


@code {
    public List<PostDto> Posts { get; set; } = new();
    private bool isLoading = true;


    async void DeletePost(PostDto postToDelete)
    {
        var result = await PostService.DeletePost(postToDelete.PostId);
        if (result.IsSuccess)
        {
            Posts.Remove(postToDelete);
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var request = await PostService.GetPosts();
        if (request.Data is not null)
        {
            Posts = request.Data;
        }
        isLoading = false;
    }
}
