@inject IJSRuntime JS


<AuthorizeView>
    <Authorized>
        @if (message.From == Guid.Parse(context.User.Claims.FirstOrDefault(c => c.Type == "Sub")!.Value))
        {
            <div class="w-100 d-flex justify-content-end mb-2">
                <MudCard Style="background: rgb(48, 47, 47); border-radius: 25px;" Outlined="true">
                    <MudCardContent>
                        <MudText Typo="Typo.body2" Style="word-wrap: break-word;  max-width: 200px;">
                            @message.Text
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </div>
        }
        else
        {
            <div class="w-100 d-flex justify-content-start mb-2">
                <div class="d-flex align-items-center">
                    <MudAvatar Style="height: 50px; width: 50px; background: transparent;" Color="Color.Primary"
                        Variant="Variant.Text">
                        @if (message.ProfilePic == null)
                        {
                            <MudAvatar Size="Size.Small" Color="Color.Tertiary">@message.To?[0]</MudAvatar>
                        }
                        else
                        {
                            <MudAvatar Size="Size.Medium">
                                <MudImage Style="border-radius: 10%; border: 0;" Src="@message.ProfilePic"
                                    Alt="Card image cap" />
                            </MudAvatar>
                        }
                    </MudAvatar>
                    <MudCard Style="background: rgb(48, 47, 47); border-radius: 25px;" Outlined="true">
                        <MudCardContent>
                            <MudText Typo="Typo.body2" Style="word-wrap: break-word; max-width: 200px;">
                                @message.Text
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <h1 style="color: white;">You Are Not Allowed To Chat. Login or Create an Account</h1>
    </NotAuthorized>
</AuthorizeView>



@code {
    [Parameter] public required MessageDto message { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/site.js");
        await module.InvokeVoidAsync("scrollToEnd");
    }
}