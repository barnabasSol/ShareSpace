@page "/suggestions"
@layout UserLayout
@inject IUserService UserService
@inject IJSRuntime JS



<div class="w-100 p1 main_sugg">
    <div class="horiz-scroll p-1 gap-1">
        @if (SuggestedUsers is null)
        {
            <SuggestedUsersLoading />
        }
        else
        {
            foreach (var user in SuggestedUsers)
            {
                <SuggestedUser User="@user" OnFollow="FollowUser" />
            }
        }

    </div>

    <section class="trending w-100">
        <MudDivider Style="color: white;" DividerType="DividerType.Middle" Class="my-1" />
        <h2 class="ml-2" style="color: white; position: sticky; top: 0;">Trending</h2>

    </section>
</div>

@code {
    List<SuggestedUserDto>? SuggestedUsers;

    async void FollowUser(SuggestedUserDto user)
    {
        var result = await UserService.FollowUser(user.UserId);
        if (result.IsSuccess)
        {
            var module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/site.js");
            await module.InvokeVoidAsync("incrementFollowingCount");
            SuggestedUsers!.Remove(user);
        }
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        var response = await UserService.GetSuggestedUsers();
        if (response.IsSuccess)
        {
            SuggestedUsers = response.Data!;
        }
    }
}