@inject NavigationManager NavManager
@if (User is null)
{
    <span>loading</span>
}
else
{
    <div @onclick="NavigateToUserPage" class="card effect"
        style="width: 13rem; flex-shrink: 0;  background: rgb(27, 27, 27); margin-right: 5px;">
        <div class="d-flex justify-content-center align-items-center pt-1">
            @if (@User.ProfilePicUrl == null)
            {
                <MudAvatar Style="height: 100px; width: 100px; background: transparent;" Color="Color.Primary"
                    Variant="Variant.Text">
                    <MudAvatar Class="bg-transparent" Size="Size.Large" Color="Color.Tertiary">
                        <span class="fs-1">@User.Name![0].ToString().ToUpper()</span>
                    </MudAvatar>
                </MudAvatar>
            }
            else
            {
                <MudAvatar Style="height: 100px; width: 100px;" Color="Color.Primary" Variant="Variant.Text">
                    <MudImage Style="border-radius: 10%; border: 0;" Src="@User.ProfilePicUrl" Alt="Card image cap" />
                </MudAvatar>
            }
        </div>
        <div style="height: fit-content;" class="card-body d-flex flex-column align-items-center">
            <span class="card-text">
                @User.Name
            </span>
            <MudButton OnClick="FollowUser" Class="mt-1" Size="Size.Small" Color="Color.Primary" Variant="Variant.Outlined">
                Follow</MudButton>
        </div>
    </div>
}


@code {

    [Parameter]
    public SuggestedUserDto? User { get; set; }

    [Parameter]
    public EventCallback<SuggestedUserDto> OnFollow { get; set; }

    void FollowUser()
    {
        OnFollow.InvokeAsync(User);
    }
    void NavigateToUserPage()
    {
        NavManager.NavigateTo($"profile/{User!.UserName}");
    }

}
