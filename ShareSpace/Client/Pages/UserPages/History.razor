@page "/history"
@layout UserLayout
@inject INotificationService NotificationService

@if (Notifications is null)
{
    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
        <MudText Color="Color.Primary" Typo="Typo.h5">Loading...</MudText>
    </div>
}
else
{
    @if (!Notifications.Any())
    {
        <div style="display: flex; justify-content: center;">
            <MudText Color="Color.Primary" Typo="Typo.h5">You Have No Notifications</MudText>
        </div>
    }
    else
    {
        <div class="px-5" style="height: 100%;">
            <MudTimeline>
                @foreach (var item in Notifications)
                {
                    if (item.Status == Status.Followed)
                    {
                        <MudTimelineItem Color="Color.Success" Size="Size.Small">
                            <ItemOpposite>
                                <MudText Color="Color.Success" Typo="Typo.h6">Started Following You</MudText>
                                <MudText Typo="Typo.h6">@item.CreatedAt</MudText>
                            </ItemOpposite>
                            <ItemContent>
                                <ShareSpace.Client.Pages.UserPages.HistoryPages.UserInHistory NotifUser="item" />
                            </ItemContent>
                        </MudTimelineItem>
                    }
                    else if (item.Status == Status.Unfollowed)
                    {
                        <MudTimelineItem Color="Color.Error" Size="Size.Small">
                            <ItemOpposite>
                                <MudText Color="Color.Error" Typo="Typo.h6">Unfollowed You Sadly</MudText>
                                <MudText Typo="Typo.h6">@item.CreatedAt</MudText>
                            </ItemOpposite>
                            <ItemContent>
                                <ShareSpace.Client.Pages.UserPages.HistoryPages.UserInHistory NotifUser="item" />
                            </ItemContent>
                        </MudTimelineItem>
                    }
                }
            </MudTimeline>
        </div>
    }

}


@code {
    public IEnumerable<NotificationsDto>? Notifications;

    protected override async Task OnInitializedAsync()
    {
        var result = await NotificationService.GetNotifications();
        if (result.IsSuccess)
        {
            Notifications = result.Data!;
        }
    }
}
